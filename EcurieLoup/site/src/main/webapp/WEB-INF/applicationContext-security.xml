<beans xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">


	<alias name="filterChainProxy" alias="springSecurityFilterChain" />

	<bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map path-type="ant">
			 <sec:filter-chain pattern="/ws/**" filters="securityContextFilter, logoutFilter, basicAuthenticationFilter,  rememberMeFilter, servletApiFilter, sessionMgmtFilter, basicExceptionTranslationFilter, filterSecurityInterceptor" />
			 <sec:filter-chain pattern="/**" filters="securityContextFilter, logoutFilter, formLoginFilter, rememberMeFilter, servletApiFilter, anonFilter, sessionMgmtFilter,  exceptionTranslator, filterSecurityInterceptor" />
		</sec:filter-chain-map>
	</bean>
	<bean id="securityContextFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<property name="securityContextRepository" ref="securityContextRepository" />
	</bean>

	<bean id="securityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />

	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="/index.do" />
		<constructor-arg>
			<list>
				<ref bean="rememberMeServices" />
				<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="formLoginFilter" class="org.springframework.security.web.authentication.AuthenticationProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationFailureHandler">
			<bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<property name="defaultFailureUrl" value="/login.do?error=1" />
			</bean>
		</property>
		<property name="authenticationSuccessHandler">
			<bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
				<property name="defaultTargetUrl" value="/compte/profil.do" />
			</bean>
		</property>
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="sessionAuthenticationStrategy">
			<bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy" />
		</property>
	</bean>


	<bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="key" value="ecurieDuLoupPass" />
	</bean>

	<bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<property name="key" value="ecurieDuLoupPass" />
	</bean>


	<bean id="servletApiFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter" />

	<bean id="sessionMgmtFilter" class="org.springframework.security.web.session.SessionManagementFilter">
		<constructor-arg ref="securityContextRepository" />
	</bean>

	<bean id="exceptionTranslator" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
				<property name="loginFormUrl" value="/login.do" />
			</bean>
		</property>
	</bean>

	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="securityMetadataSource">
			<sec:filter-security-metadata-source>
				<sec:intercept-url pattern="/compte/**" access="ROLE_AUTHENTIFIER" />
				<sec:intercept-url pattern="/memo/**" access="ROLE_AUTHENTIFIER" />
				<sec:intercept-url pattern="/forum/administration/**" access="ROLE_ADMINISTRATEUR_FORUM" />
				<sec:intercept-url pattern="/forum/**" access="ROLE_AUTHENTIFIER" />
				<sec:intercept-url pattern="/albumphoto/formulairecommentaire**" access="ROLE_AUTHENTIFIER" />
				<sec:intercept-url pattern="/albumphoto/formulaire**" access="ROLE_ADMINISTRATEUR_PHOTO" />
				<sec:intercept-url pattern="/albumphoto/**" access="ROLE_AUTHENTIFIER" />
				<sec:intercept-url pattern="/page/**" access="ROLE_ADMINISTRATEUR_ADMIN" />
				<sec:intercept-url pattern="/calendrier/**" access="ROLE_AUTHENTIFIER" />
				<sec:intercept-url pattern="/administration/**" access="ROLE_ADMINISTRATEUR_ADMIN" />
				<sec:intercept-url pattern="/news/formulaire**" access="ROLE_ADMINISTRATEUR_NEWS" />
				<sec:intercept-url pattern="/fichechevaux/administration/**" access="ROLE_ADMINISTRATEUR_FICHECHEVAUX" />
				<sec:intercept-url pattern="/community/**" access="ROLE_AUTHENTIFIER" />
				<sec:intercept-url pattern="/ws/**" access="ROLE_AUTHENTIFIER" />
			</sec:filter-security-metadata-source>
		</property>
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
	</bean>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider user-service-ref="userDetailsService" />
		<sec:authentication-provider ref="rememberMeAuthenticationProvider" />
	</sec:authentication-manager>


	<bean id="authenticationManagerBasic" class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="authenticationProvider" />
			</list>
		</property>
	</bean>

	<bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsServiceBasic" />
	</bean>


	<bean id="userDetailsService" class="security.UserDetailsServiceImpl">
		<property name="utilisateurManager" ref="utilisateurManager" />
	</bean>
	
	<bean id="userDetailsServiceBasic" class="security.UserDetailsServiceBasicImpl">
		<property name="utilisateurManager" ref="utilisateurManager" />
	</bean>


	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
			</list>
		</property>
	</bean>

	<bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManagerBasic" />
		<property name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint" />
	</bean>

	<bean id="basicExceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint" />
	</bean>

	<bean id="basicAuthenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
		<property name="realmName" value="Ecuries du loup" />
	</bean>

	<bean id="anonFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<property name="key" value="SomeUniqueKeyForThisApplication" />
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</bean>


</beans>
